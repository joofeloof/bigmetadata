

.. Boundaries:

Boundaries


Political, administrative, and census-based boundaries.

.. contents::
   :local:
   :depth: 10





.. _mx.inegi.ageb:

Census area (urban areas only)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "Census area (urban areas only)" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.ageb'
    )





Obtain all "Census area (urban areas only)" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.ageb'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.ageb`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`







.. _mx.inegi.manzana:

Census block (urban areas only)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "Census block (urban areas only)" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.manzana'
    )





Obtain all "Census block (urban areas only)" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.manzana'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.manzana`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`







.. _mx.inegi.localidad_urbana_y_rural_amanzanada:

Localidades (urban)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "Localidades (urban)" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.localidad_urbana_y_rural_amanzanada'
    )





Obtain all "Localidades (urban)" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.localidad_urbana_y_rural_amanzanada'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.localidad_urbana_y_rural_amanzanada`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`







.. _mx.inegi.municipio:

Municipios
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "Municipios" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.municipio'
    )





Obtain all "Municipios" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.municipio'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.municipio`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`







.. _mx.inegi.servicios_area:

Service areas
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "Service areas" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.servicios_area'
    )





Obtain all "Service areas" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.servicios_area'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.servicios_area`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`







.. _mx.inegi.entidad:

State
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











Obtain "State" geometry at one point:


.. code-block:: postgresql





  INSERT INTO {tablename}(the_geom)
    SELECT OBS_GetBoundary(
      CDB_LatLng(19.4134769939, -99.1701936722),
      'mx.inegi.entidad'
    )





Obtain all "State" geometries within an area:

.. code-block:: postgresql

  INSERT INTO {new_table_name} (the_geom, {geo_id_column})
    SELECT *
    FROM OBS_GetBoundariesByGeometry(
      ST_Buffer(CDB_LatLng(19.4134769939, -99.1701936722), 0.01),
      'mx.inegi.entidad'
    )







.. raw:: html

   <table border="1" class="docutils">
   <thead valign="bottom">
   <tr class="row-odd"><th class="head">Boundary</th>
   <th class="head">Time (default is latest)</th>
   </tr>
   </thead>
   <tbody valign="top">


   
.. raw:: html

   <tr class="row-even"><td>

:ref:`mx.inegi.entidad`

.. raw:: html

   </td>
   <td>

2015

.. raw:: html

   </td>

   

.. raw:: html

   </tr>
   </tbody>
   </table>





:Source:

    :ref:`mx.inegi_columns.inegi-source`

:License:

    :ref:`mx.inegi_columns.inegi-license`



